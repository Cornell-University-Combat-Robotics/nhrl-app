
CREATE TYPE subteam_names AS ENUM ('sportsman', 'kinetic', 'marketing', 'autonomous');

CREATE TABLE subteams (
    subteam_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subteam_name subteam_names
);
CREATE TABLE builders (
    builder_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    builder_name TEXT,
    -- builder BELONGS TO subteam
    subteam_id BIGINT REFERENCES subteams(subteam_id)
);
--TODO: need another one for driver?
CREATE TYPE weight_class AS ENUM ('3lb', '12lb');
CREATE TYPE weapon AS ENUM ('drum', 'vertical spinner', 'horizontal spinner');
CREATE TYPE drive AS ENUM ('walker', '2 wheel', '4 wheel');

CREATE TABLE robots (
    robot_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    robot_name TEXT,
    -- placed here instead of in builder table, because robot BELONGS TO builder
    builder_id BIGINT REFERENCES builders( builder_id ),
    weight_class weight_class,
    weapon weapon,
    drive drive, 
    top_speed BIGINT,
    weapon_speed BIGINT
);
-- join table
CREATE TABLE robots_builders (
    robot_id BIGINT REFERENCES robots (robot_id),
    builder_id BIGINT REFERENCES builders (builder_id),
    PRIMARY KEY (robot_id, builder_id)
);
CREATE TYPE outcome_type AS ENUM ('KO', 'Judges Decision', 'Tapout');

CREATE TABLE fights (
    fight_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    -- foreign key: links to robot_id column in robots table
    -- placed here instead of in robots table, because fights BELONGS TO robot
    robot_id BIGINT REFERENCES robots(robot_id),
    opponent_name TEXT, --prob change this to another table if wanna query opponent info
    cage BIGINT,
    fight_time BIGINT, 
    last_updated BIGINT, 
    -- 1 if OUR robot has won
    is_win BOOLEAN,
    fight_duration BIGINT,
    outcome_type outcome_type
);